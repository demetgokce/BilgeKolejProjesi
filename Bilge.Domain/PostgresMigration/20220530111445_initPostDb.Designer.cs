// <auto-generated />
using System;
using Bilge.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bilge.Domain.PostresMigration
{
    [DbContext(typeof(BilgeDbContext))]
    [Migration("20220530111445_initPostDb")]
    partial class initPostDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Bilge.Domain.Ders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DersAd")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<int>("SinifId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("Ders");
                });

            modelBuilder.Entity("Bilge.Domain.DersProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<int?>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Saat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SinifId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("VeliId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("OgretmenId");

                    b.HasIndex("SinifId");

                    b.HasIndex("VeliId");

                    b.ToTable("DersProgramlar");
                });

            modelBuilder.Entity("Bilge.Domain.Donem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DonemBaslangıcTarihi")
                        .HasColumnType("integer");

                    b.Property<int>("DonemBitisTarihi")
                        .HasColumnType("integer");

                    b.Property<int>("DonemTip")
                        .HasColumnType("integer");

                    b.Property<int>("Yil")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Donem");
                });

            modelBuilder.Entity("Bilge.Domain.DonemDers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<int>("DonemId")
                        .HasColumnType("integer");

                    b.Property<int?>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("OgretmenId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("DonemId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("OgretmenId");

                    b.ToTable("DonemDers");
                });

            modelBuilder.Entity("Bilge.Domain.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CikisTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DogumTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("GirisTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SinifId")
                        .HasColumnType("integer");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.HasIndex("SinifId");

                    b.ToTable("Ogrenciler");
                });

            modelBuilder.Entity("Bilge.Domain.OgrenciDonemNot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("BasariDurumTip")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DonemDersId")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("Ortalama")
                        .HasColumnType("integer");

                    b.Property<int>("Sinav1")
                        .HasColumnType("integer");

                    b.Property<int>("Sinav2")
                        .HasColumnType("integer");

                    b.Property<int>("SonSinav")
                        .HasColumnType("integer");

                    b.Property<int?>("VeliId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DonemDersId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("VeliId");

                    b.ToTable("OgrenciDonemNotlar");
                });

            modelBuilder.Entity("Bilge.Domain.Ogretmen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CikisTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DersId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DogumTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("GirisTarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.HasIndex("DersId");

                    b.ToTable("Ogretmenler");
                });

            modelBuilder.Entity("Bilge.Domain.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<string>("Kod")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<string>("SinifAdi")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Siniflar");
                });

            modelBuilder.Entity("Bilge.Domain.Veli", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EPosta")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TcNo")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)");

                    b.HasKey("Id");

                    b.ToTable("Veliler");
                });

            modelBuilder.Entity("Bilge.Domain.Yoklama", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DersProgramId")
                        .HasColumnType("integer");

                    b.Property<int>("OgrenciId")
                        .HasColumnType("integer");

                    b.Property<int>("PlanID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Saat")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("VeliId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DersProgramId");

                    b.HasIndex("OgrenciId");

                    b.HasIndex("VeliId");

                    b.ToTable("Yoklamalar");
                });

            modelBuilder.Entity("Bilge.Domain.Ders", b =>
                {
                    b.HasOne("Bilge.Domain.Sinif", "Sinif")
                        .WithMany("Dersler")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("Bilge.Domain.DersProgram", b =>
                {
                    b.HasOne("Bilge.Domain.Ders", "Ders")
                        .WithMany("DersProgramlar")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Ogrenci", null)
                        .WithMany("DersPrograms")
                        .HasForeignKey("OgrenciId");

                    b.HasOne("Bilge.Domain.Ogretmen", "Ogretmen")
                        .WithMany("DersProgram")
                        .HasForeignKey("OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Sinif", "Sinif")
                        .WithMany("DersPrograms")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Veli", null)
                        .WithMany("DersProgram")
                        .HasForeignKey("VeliId");

                    b.Navigation("Ders");

                    b.Navigation("Ogretmen");

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("Bilge.Domain.DonemDers", b =>
                {
                    b.HasOne("Bilge.Domain.Ders", "Ders")
                        .WithMany("DonemDersler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Donem", "Donem")
                        .WithMany("DonemDersler")
                        .HasForeignKey("DonemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Ogrenci", null)
                        .WithMany("DonemDers")
                        .HasForeignKey("OgrenciId");

                    b.HasOne("Bilge.Domain.Ogretmen", "Ogretmen")
                        .WithMany("DonemDersler")
                        .HasForeignKey("OgretmenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Donem");

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("Bilge.Domain.Ogrenci", b =>
                {
                    b.HasOne("Bilge.Domain.Ders", "Ders")
                        .WithMany()
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Sinif", "Sinif")
                        .WithMany("Ogrenciler")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("Bilge.Domain.OgrenciDonemNot", b =>
                {
                    b.HasOne("Bilge.Domain.DonemDers", "DonemDers")
                        .WithMany("OgrenciDonemNot")
                        .HasForeignKey("DonemDersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Ogrenci", "Ogrenci")
                        .WithMany("OgrenciDonemNot")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Veli", null)
                        .WithMany("OgrenciDonemNot")
                        .HasForeignKey("VeliId");

                    b.Navigation("DonemDers");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("Bilge.Domain.Ogretmen", b =>
                {
                    b.HasOne("Bilge.Domain.Ders", "Ders")
                        .WithMany("Ogretmenler")
                        .HasForeignKey("DersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");
                });

            modelBuilder.Entity("Bilge.Domain.Yoklama", b =>
                {
                    b.HasOne("Bilge.Domain.DersProgram", "DersProgram")
                        .WithMany("Yoklamalar")
                        .HasForeignKey("DersProgramId");

                    b.HasOne("Bilge.Domain.Ogrenci", "Ogrenci")
                        .WithMany("Yoklamas")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bilge.Domain.Veli", null)
                        .WithMany("Yoklamas")
                        .HasForeignKey("VeliId");

                    b.Navigation("DersProgram");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("Bilge.Domain.Ders", b =>
                {
                    b.Navigation("DersProgramlar");

                    b.Navigation("DonemDersler");

                    b.Navigation("Ogretmenler");
                });

            modelBuilder.Entity("Bilge.Domain.DersProgram", b =>
                {
                    b.Navigation("Yoklamalar");
                });

            modelBuilder.Entity("Bilge.Domain.Donem", b =>
                {
                    b.Navigation("DonemDersler");
                });

            modelBuilder.Entity("Bilge.Domain.DonemDers", b =>
                {
                    b.Navigation("OgrenciDonemNot");
                });

            modelBuilder.Entity("Bilge.Domain.Ogrenci", b =>
                {
                    b.Navigation("DersPrograms");

                    b.Navigation("DonemDers");

                    b.Navigation("OgrenciDonemNot");

                    b.Navigation("Yoklamas");
                });

            modelBuilder.Entity("Bilge.Domain.Ogretmen", b =>
                {
                    b.Navigation("DersProgram");

                    b.Navigation("DonemDersler");
                });

            modelBuilder.Entity("Bilge.Domain.Sinif", b =>
                {
                    b.Navigation("Dersler");

                    b.Navigation("DersPrograms");

                    b.Navigation("Ogrenciler");
                });

            modelBuilder.Entity("Bilge.Domain.Veli", b =>
                {
                    b.Navigation("DersProgram");

                    b.Navigation("OgrenciDonemNot");

                    b.Navigation("Yoklamas");
                });
#pragma warning restore 612, 618
        }
    }
}
